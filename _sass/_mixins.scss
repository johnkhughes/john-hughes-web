// Mixins

// Media queries
@mixin media($type: all, $size: false) {
    $query: $type;
    $sizes: (
        octavo: "(min-width: 30rem) and (min-height: 20rem)",
        quarto: "(min-width: 40rem) and (min-height: 30rem)",
    );

    @if $size and map-has-key($sizes, $size) {
        $query: "#{$query} and #{map-get($sizes, $size)}";
    }

    // If the media query is equivalent to no media query at all, output the
    // content without a media query.
    @if $query == all {
        @content;
    }

    @else {
        @media #{$query} {
            @content;
        }
    }
}

// Font sizes
@mixin font-size($n) {
    $scales: (
        duodecimo: 1.125,
        octavo: 1.25,
        quarto: 1.333,
    );

    // Negative font sizes are not responsive and cannot be smaller than a
    // particular font size.
    @if $n == -1 {
        font-size: 0.875em;
    }

    @else if $n < -1 {
        font-size: 0.75em;
    }

    @else {
        @each $key, $scale in $scales {
            $size: 1em * pow($scale, $n);

            @if not map-has-key($scales, $key) {
                font-size: $size;
            }

            @else {
                @include media(all, $key) {
                    font-size: $size;
                }
            }
        }
    }
}

// Linear gradient background
@mixin gradient {
    background: $green;
    background: linear-gradient(120deg, $blue, $green);
    color: white;
}

// Prefixes
@mixin prefix($property, $value) {
    -webkit-#{$property}: #{$value};
    -moz-#{$property}: #{$value};
    -ms-#{$property}: #{$value};
    #{$property}: #{$value};
}
